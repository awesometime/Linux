<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="12.3.4.files/filelist.xml">
<link rel=Edit-Time-Data href="12.3.4.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title> socket 的通信过程</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chsdate" downloadurl=""/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>ls</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2007-08-17T08:18:00Z</o:Created>
  <o:LastSaved>2009-05-05T06:34:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>564</o:Words>
  <o:Characters>3215</o:Characters>
  <o:Lines>26</o:Lines>
  <o:Paragraphs>7</o:Paragraphs>
  <o:CharactersWithSpaces>3772</o:CharactersWithSpaces>
  <o:Version>11.6360</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><st1:chsdate Year="1899" Month="12" Day="30"
IsLunarDate="False" IsROCDate="False" w:st="on"><b style='mso-bidi-font-weight:
 normal'><span lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
 font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:
 0pt'>12.3.4</span></b></st1:chsdate><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>
socket </span></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>的通信过程<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>请先看图<span lang=EN-US>12.9</span>所示的<b style='mso-bidi-font-weight:
normal'><span lang=EN-US>socket</span></b><span lang=EN-US> </span>通信过程<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:318.75pt;
 height:330.75pt'>
 <v:imagedata src="12.3.4.files/image001.gif" o:title="129"/>
</v:shape><![endif]--><![if !vml]><img width=425 height=441
src="12.3.4.files/image001.gif" v:shapes="_x0000_i1025"><![endif]><span
style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>图<span lang=EN-US>12.9 </span></span><span lang=EN-US
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>socket </span><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>的通信过程<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>1.</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>建立套接字<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>Linux</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>在利用<span lang=EN-US>socket()</span>系统调用建立新的套接字时，需要传递套接字的地址族标识符、套接字类型以及协议<span
lang=EN-US>,</span>其函数定义于<span lang=EN-US>net/<span class=SpellE>socket.c</span></span>中：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span class=SpellE><span
class=GramE>asmlinkage</span></span> long <span class=SpellE>sys_socket</span>(<span
class=SpellE>int</span> family, <span class=SpellE>int</span> type, <span
class=SpellE>int</span> protocol)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>int</span></span> <span class=SpellE>retval</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>struct</span></span> socket *sock;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE><span class=GramE>retval</span></span> = <span
class=SpellE>sock_create</span>(family, type, protocol, &amp;sock);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (<span class=SpellE>retval</span> &lt; 0)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE><span class=GramE>goto</span></span> out;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE><span class=GramE>retval</span></span> = <span
class=SpellE>sock_map_fd</span>(sock);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> (<span class=SpellE>retval</span> &lt; 0)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE><span class=GramE>goto</span></span> <span
class=SpellE>out_release</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:36.0pt'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>out</span></span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* It may be already another descriptor 8) Not kernel problem. */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> <span class=SpellE>retval</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><span lang=EN-US style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>out_release</span></span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE>sock_<span class=GramE>release</span></span><span
class=GramE>(</span>sock);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> <span class=SpellE>retval</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>实际上，套接字对于用户程序而言就是特殊的已打开的文件。内核中为套接字定义了一种特殊的文件类型，形成一种特殊的文件系统<span
class=SpellE><span lang=EN-US>sockfs</span></span>，其定义于<span lang=EN-US>net/<span
class=SpellE>socket.c</span></span>：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><span
class=GramE>static</span> <span class=SpellE>struct</span> <span class=SpellE>vfsmount</span>
*<span class=SpellE>sock_mnt</span>;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><span
class=GramE>static</span> DECLARE_FSTYPE(<span class=SpellE>sock_fs_type</span>,
&quot;<span class=SpellE>sockfs</span>&quot;, <span class=SpellE>sockfs_read_super</span>,
FS_NOMOUNT);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在系统初始化时，要通过<span class=SpellE><span lang=EN-US>kern_mount</span></span><span
lang=EN-US>()</span>安装这个文件系统。安装时有个作为连接件的<span class=SpellE><span lang=EN-US>vfsmount</span></span>数据结构，这个结构的地址就保存在一个全局的指针<span
class=SpellE><span lang=EN-US>sock_mnt</span></span>中。所谓创建一个套接字，就是在<span
class=SpellE><span lang=EN-US>sockfs</span></span>文件系统中创建一个特殊文件，或者说一个节点，并建立起为实现套接字功能所需的一整套数据结构。所以，函数<span
class=SpellE><span lang=EN-US>sock_create</span></span><span lang=EN-US>()</span>首先是建立一个<span
lang=EN-US>socket</span>数据结构，然后将其“映射”到一个已打开的文件中，进行<span lang=EN-US>socket</span>结构和<span
lang=EN-US>sock</span>结构的分配和初始化。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>新创建的<span
lang=EN-US> BSD socket </span>数据结构包含有指向地址族专有的套接字例程的指针，这一指针实际就是<span lang=EN-US>
<span class=SpellE>proto_ops</span> </span>数据结构的地址。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>BSD </span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>套接字的套接字类型设置为所请求的<span
lang=EN-US> SOCK_STREAM </span>或<span lang=EN-US> SOCK_DGRAM </span>等。然后，内核利用<span
lang=EN-US> <span class=SpellE>proto_ops</span> </span>数据结构中的信息调用地址族专有的创建例程。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>之后，内核从当前进程的<span
lang=EN-US> <span class=SpellE>fd</span> </span>向量中分配空闲的文件描述符，该描述符指向的<span
lang=EN-US> file </span>数据结构被初始化。初始化过程包括将文件操作集指针指向由<span lang=EN-US> BSD </span>套接字接口支持的<span
lang=EN-US> BSD </span>文件操作集。所有随后的套接字（文件）操作都将定向到该套接字接口，而套接字接口则会进一步调用地址族的操作例程，从而将操作传递到底层地址族<span
lang=EN-US>,</span>如图<span lang=EN-US>12.10</span>所示。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
 style='width:340.5pt;height:314.25pt'>
 <v:imagedata src="12.3.4.files/image002.gif" o:title="1210"/>
</v:shape><![endif]--><![if !vml]><img width=454 height=419
src="12.3.4.files/image002.gif" v:shapes="_x0000_i1026"><![endif]></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>图<span lang=EN-US>12.10 socket </span>在文件系统<span
class=SpellE><span lang=EN-US>inode</span></span>中的位置<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>实际上，<span lang=EN-US>socket</span>结构与<span
lang=EN-US>sock</span>结构是同一事物的两个方面。如果说<span lang=EN-US>socket</span>结构是面向进程和系统调用界面的，那么<span
lang=EN-US>sock</span>结构就是面向底层驱动程序的。可是，为什么不把这两个数据结构合并成一个呢？<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>我们说套接字是一种特殊的文件系统，因此，<span class=SpellE><span
lang=EN-US>inode</span></span>结构内部的<span lang=EN-US>union</span>的一个成分就用作<span
lang=EN-US>socket</span>结构，其定义如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span class=SpellE><span lang=EN-US style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>struct</span></span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'> <span class=SpellE>inode</span> </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>｛<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></span><span lang=EN-US
style='mso-ascii-font-family:宋体;color:black;mso-font-kerning:0pt'>…</span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp; </span><span class=GramE>union</span> {<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US style='mso-ascii-font-family:宋体;color:black;mso-font-kerning:0pt'>…</span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE><span class=GramE>struct</span></span> socket<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=SpellE>socket_i</span>;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:24.0pt;mso-layout-grid-align:none;
text-autospace:none'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>由于套接字操作的特殊性，这个结构中需要大量的结构成分。可是，如果把这些结构成分全都放在<span
lang=EN-US>socket</span>结构中，则<span class=SpellE><span lang=EN-US>inode</span></span>结构中的这个<span
lang=EN-US>union</span>就会变得很大，从而<span class=SpellE><span lang=EN-US>inode</span></span>结构也会变得很大，而对于其他文件系统，这个<span
lang=EN-US>union</span>成分并不需要那么庞大。因此，就把套接字所需的这些结构成分拆成两部分，把与文件系统关系比较密切的那一部分放在<span
lang=EN-US>socket</span>结构中，把与通信关系比较密切的那一部分则单独组成一个数据结构，即<span lang=EN-US>sock</span>结构。由于这两部分数据在逻辑上本来就是一体的，所以要通过指针互相指向对方，形成一对一的关系。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>2</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>．<b style='mso-bidi-font-weight:normal'>在<span
lang=EN-US> INET BSD </span>套接字上绑定（<span lang=EN-US>bind</span>）地址<span
lang=EN-US><o:p></o:p></span></b></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>为了监听传入的<span lang=EN-US> Internet </span>连接请求，每个服务器都需要建立一个<span
lang=EN-US> INET BSD </span>套接字，并且将自己的地址绑定到该套接字。绑定操作主要在<span lang=EN-US> INET </span>套接字层中进行，还需要底层<span
lang=EN-US> TCP </span>层和<span lang=EN-US> IP </span>层的某些支持。将地址绑定到某个套接字上之后，该套接字就不能用来进行任何其他的通讯，因此，该<span
lang=EN-US> socket</span>数据结构的状态必须为<span lang=EN-US> TCP_CLOSE</span>。传递到绑定操作的<span
lang=EN-US> <span class=SpellE>sockaddr</span> </span>数据结构中包含要绑定的<span
lang=EN-US> IP</span>地址，以及一个可选的端口地址。通常而言，要绑定的地址应该是赋予某个网络设备的<span lang=EN-US> IP
</span>地址，而该网络设备应该支持<span lang=EN-US> INET </span>地址族，并且该设备是可用的。利用<span
lang=EN-US> <span class=SpellE>ifconfig</span> </span>命令可查看当前活动的网络接口。被绑定的<span
lang=EN-US> IP </span>地址保存在<span lang=EN-US> sock </span>数据结构的<span
class=SpellE><span lang=EN-US>rcv_saddr</span></span><span lang=EN-US> </span>和<span
lang=EN-US> <span class=SpellE>saddr</span> </span>域中，这两个域分别用于哈希查找和发送用的<span
lang=EN-US> IP </span>地址。端口地址是可选的，如果没有指定，底层的支持网络会选择一个空闲的端口。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>当底层网络设备接受到数据包时，它必须将数据包传递到正确的<span
lang=EN-US> INET </span>和<span lang=EN-US> BSD </span>套接字以便进行处理，因此，<span
lang=EN-US>TCP</span>维护多个哈希表，用来查找传入<span lang=EN-US> IP </span>消息的地址，并将它们定向到正确的<span
lang=EN-US>socket/sock </span>对。<span lang=EN-US>TCP </span>并不在绑定过程中将绑定的<span
lang=EN-US> sock </span>数据结构添加到哈希表中，在这一过程中，它仅仅判断所请求的端口号当前是否正在使用。在监听操作中，该<span
lang=EN-US> sock </span>结构才被添加到<span lang=EN-US> TCP </span>的哈希表中。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>3</span></b><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>．<b
style='mso-bidi-font-weight:normal'>在<span lang=EN-US> INET BSD </span>套接字上建立连接
（<span lang=EN-US>connect</span>）<span lang=EN-US><o:p></o:p></span></b></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span></span></b><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>创建一个套接字之后，该套接字不仅可以用于监听入站的连接请求，也可以用于建立出站的连接请求。不论怎样都涉及到一个重要的过程：建立两个应用程序之间的虚拟电路。出站连接只能建立在处于正确状态的<span
lang=EN-US> INET BSD </span>套接字上，因此，不能建立于已建立连接的套接字，也不能建立于用于监听入站连接的套接字。也就是说，该<span
lang=EN-US> BSD socket </span>数据结构的状态必须为<span lang=EN-US> SS_UNCONNECTED</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在建立连接过程中，双方<span lang=EN-US> TCP </span>要进行三次“握手”，具体过程在 本章第二节――网络协议一文中有详细介绍。如果<span
lang=EN-US> TCP sock </span>正在等待传入消息，则该<span lang=EN-US> sock </span>结构添加到<span
lang=EN-US> <span class=SpellE>tcp_listening_hash</span> </span>表中，这样，传入的<span
lang=EN-US> TCP </span>消息就可以定向到该<span lang=EN-US> sock </span>数据结构。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>4</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>．监听（<span lang=EN-US>listen</span>）<span
lang=EN-US> INET BSD </span>套接字 <span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>当某个套接字被绑定了地址之后，该套接字就可以用来监听专属于该绑定地址的传入连接。网络应用程序也可以在未绑定地址之前监听套接字，这时，<span
lang=EN-US>INET </span>套接字层将利用空闲的端口编号并自动绑定到该套接字。套接字的监听函数将<span lang=EN-US>
socket </span>的状态改变为<span lang=EN-US> TCP_LISTEN</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>当接收到某个传入的<span
lang=EN-US> TCP </span>连接请求时，<span lang=EN-US>TCP </span>建立一个新的<span
lang=EN-US> sock </span>数据结构来描述该连接。当该连接最终被接受时，新的<span lang=EN-US> sock </span>数据结构将变成该<span
lang=EN-US> TCP </span>连接的内核<span class=SpellE><span lang=EN-US>bottom_half</span></span>部分，这时，它要克隆包含连接请求的传入<span
lang=EN-US> <span class=SpellE>sk_buff</span> </span>中的信息，并在监听<span lang=EN-US>
sock </span>数据结构的<span lang=EN-US> <span class=SpellE>receive_queue</span> </span>队列中将克隆的信息排队。克隆的<span
lang=EN-US> <span class=SpellE>sk_buff</span> </span>中包含有指向新<span lang=EN-US>
sock </span>数据结构的指针。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>5</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>．<b style='mso-bidi-font-weight:normal'>接受连接请求 （<span
lang=EN-US>accept</span>）<span lang=EN-US><o:p></o:p></span></b></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>接受操作在监听套接字上进行，从监听<span
lang=EN-US> socket </span>中克隆一个新的<span lang=EN-US> socket </span>数据结构。其过程如下：接受操作首先传递到支持协议层，即<span
lang=EN-US> INET </span>中，以便接受任何传入的连接请求。相反，接受操作进一步传递到实际的协议，例如<span lang=EN-US>
TCP </span>上。接受操作可以是阻塞的，也可以是非阻塞的。接受操作为非阻塞的情况下，如果没有可接受的传入连接，则接受操作将失败，而新建立的<span
lang=EN-US> socket </span>数据结构被抛弃。接受操作为阻塞的情况下，执行阻塞操作的网络应用程序将添加到等待队列中，并保持挂起直到接收到一个<span
lang=EN-US> TCP </span>连接请求为至。当连接请求到达之后，包含连接请求的<span lang=EN-US> <span
class=SpellE>sk_buff</span> </span>被丢弃，而由<span lang=EN-US> TCP </span>建立的新<span
lang=EN-US> sock </span>数据结构返回到<span lang=EN-US> INET </span>套接字层，在这里，<span
lang=EN-US>sock </span>数据结构和先前建立的新<span lang=EN-US> socket </span>数据结构建立链接。而新<span
lang=EN-US> socket </span>的文件描述符（<span class=SpellE><span lang=EN-US>fd</span></span>）被返回到网络应用程序，此后，应用程序就可以利用该文件描述符在新建立的<span
lang=EN-US> INET BSD </span>套接字上进行套接字操作。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
