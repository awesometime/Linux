<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="11.3.3.files/filelist.xml">
<title> 块设备驱动程序的几个函数</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chsdate" downloadurl=""/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2007-08-17T04:00:00Z</o:Created>
  <o:LastSaved>2007-08-17T04:00:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>791</o:Words>
  <o:Characters>4512</o:Characters>
  <o:Lines>37</o:Lines>
  <o:Paragraphs>10</o:Paragraphs>
  <o:CharactersWithSpaces>5293</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:宋体;
	mso-hansi-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:black;
	mso-font-kerning:1.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:96147344;
	mso-list-type:simple;
	mso-list-template-ids:942283718;}
@list l0:level1
	{mso-level-text:%1．;
	mso-level-tab-stop:15.0pt;
	mso-level-number-position:left;
	margin-left:15.0pt;
	text-indent:-15.0pt;}
@list l1
	{mso-list-id:1648512338;
	mso-list-type:simple;
	mso-list-template-ids:1937021516;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:・;
	mso-level-tab-stop:21.25pt;
	mso-level-number-position:left;
	margin-left:21.25pt;
	text-indent:-21.25pt;
	font-family:宋体;
	mso-hansi-font-family:Wingdings;}
@list l2
	{mso-list-id:1978336146;
	mso-list-type:simple;
	mso-list-template-ids:1937021516;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:・;
	mso-level-tab-stop:21.25pt;
	mso-level-number-position:left;
	margin-left:21.25pt;
	text-indent:-21.25pt;
	font-family:宋体;
	mso-hansi-font-family:Wingdings;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=left style='text-align:left;mso-outline-level:1;
mso-layout-grid-align:none;text-autospace:none'><st1:chsdate Year="1899"
Month="12" Day="30" IsLunarDate="False" IsROCDate="False" w:st="on"><span
 lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:
 0pt;font-weight:normal'>11.3.3</span></st1:chsdate><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'> </span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'>块设备驱动程序的几个函数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:25.75pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>所有对<span
class=GramE>块设备</span>的读写都是调用</span><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>generic_file_read ( )</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>和<span
lang=EN-US>generic_file_write ( )</span></span><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'> </span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'>函数，这两个函数的原型如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:25.75pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:23.5pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>ssize_t generic_file_<span class=GramE>read(</span>struct
file * filp, char * buf, size_t count, loff_t <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;</span>*ppos)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='margin-left:23.5pt;text-align:left;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>ssize_t<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>generic_file_<span
class=GramE>write(</span>struct file *file,const char *buf,size_t count, loff_t
<span style='mso-spacerun:yes'>&nbsp;</span>*ppos)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>其参数的含义如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:21.25pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>filp</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>：和这个设备文件相对应的文件对象的地址。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:36.0pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>Buf</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>：用户态地址空间中的缓冲区的地址。</span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:
0pt;font-weight:normal'>generic_file_read</span><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>（）</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>把从<span
class=GramE>块设备</span>中读出的数据写入这个缓冲区；反之，</span><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>generic_file_write</span><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>（）</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>从这个缓冲区中读取要写入<span
class=GramE>块设备</span>的数据。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Count</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>：要传送的字节数。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:36.0pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>ppos</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>：设备文件中的偏移变量的地址；通常，这个参数指向<span
lang=EN-US>filp-&gt;f_pos</span>，也就是说，指向设备文件的文件指针。</span><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:23.5pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>只要进程对设备文件发出读写操作，高级设备驱动程序就调用这两个函数。例如，<span
lang=EN-US>superformat</span>程序通过把块写入<span lang=EN-US>/dev/fd0</span>设备文件来格式化磁盘，相应文件对象的<span
lang=EN-US>write</span>方法就调用</span><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>generic_file_write</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>（）</span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'>函数。</span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'>这两个函数所做的就是对缓冲区进行读写，如果缓冲区不能满足操作要求则<span
class=GramE>则</span>返回负值，否则返回实际读写的字节数。每个<span class=GramE>块设备</span>在需要读写时都调用这两个函数。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:23.5pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>下面介绍几个低层被频繁调用的函数。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:15.0pt;text-align:left;
text-indent:-15.0pt;mso-list:l0 level1 lfo1;tab-stops:list 15.0pt;mso-layout-grid-align:
none;text-autospace:none'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-bidi-font-family:宋体;
mso-font-kerning:0pt;font-weight:normal'><span style='mso-list:Ignore'>1．<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>bread(
)</span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:
normal'>和<span lang=EN-US>breada( )</span></span><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'> </span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;mso-font-kerning:0pt;font-weight:normal'>函数<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>bread( )</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>函数检查缓冲区中是否已经包含了一个特定的块；如果还没有，该函数就从<span
class=GramE>块设备</span>中读取这个块。文件系统广泛使用<span lang=EN-US>bread( )</span>从磁盘位图、索引节点以及其他基于块的数据结构中读取数据。（注意当进程要读<span
class=GramE>块设备</span>文件时是使用函数</span><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>generic_file_read</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;
font-weight:normal'>（）函数</span><span style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'>，而不是使用<span lang=EN-US>bread( )</span>函数。）该函数接收设备标志符、<span
class=GramE>块号和</span>块大小作为参数，其代码在<span lang=EN-US>fs/buffer.c</span>中：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>/**<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;</span>*<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>bread(</span>) - reads a specified block and returns the bh<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;</span>*<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@block: number
of block<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;</span>*<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>@size: size (in
bytes) to read<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;</span>* <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp; </span>*<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Reads a
specified block, and returns buffer head that<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp; </span>*<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>contains it. It
returns NULL if the block was unreadable.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp; </span>*/<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span class=GramE><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>struct</span></span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>
buffer_head * bread(kdev_t dev, int block, int size)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>{<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>struct</span> buffer_head * bh;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>bh</span> = getblk(dev, block, size);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>touch_<span
class=GramE>buffer(</span>bh);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (buffer_uptodate(bh))<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return</span> bh;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>ll_rw_<span class=GramE>block(</span>READ, 1, &amp;bh);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>wait_on_<span class=GramE>buffer(</span>bh);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> (buffer_uptodate(bh))<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return</span> bh;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>brelse(</span>bh);<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return</span> NULL;<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:20.4pt'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>对该函数解释如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:42.5pt;text-indent:-21.25pt;mso-list:
l1 level1 lfo2;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>调用<span
lang=EN-US>getblk( )</span>函数来查找缓冲区中的一个块；如果这个块不在缓冲区中，那么<span lang=EN-US>getblk(
)</span>就为它分配一个新的缓冲区。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:42.5pt;text-indent:-21.25pt;mso-list:
l1 level1 lfo2;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>调用<span
lang=EN-US>buffer_uptodate</span>（）宏来判断这个缓冲区是否已经包含最新数据，如果是，则<span lang=EN-US>getblk(
)</span>结束。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:42.5pt;text-indent:-21.25pt;mso-list:
l1 level1 lfo2;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>如果缓冲区中没有包含最新数据，就调用<span
lang=EN-US>ll_rw_block( )</span>函数启动读操作。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:42.5pt;text-indent:-21.25pt;mso-list:
l1 level1 lfo2;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>等待，直到数据传送完成为止。这是通过调用一个名为<span
lang=EN-US>wait_on_buffer( )</span>的函数来实现的，该函数把当前进程插入<span lang=EN-US>b_wait</span>等待队列中，并挂起当前进程直到这个缓冲区被开锁为止。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:20.4pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>breada( )</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>和<span
lang=EN-US>bread( )</span>十分类似，但是它除了读取所请求的块之外，还要另外预读一些其他块。注意不存在把<span
class=GramE>块直接</span>写入磁盘的函数。写操作永远都不会成为系统性能的瓶颈，因为写操作通常都会延时。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='margin-left:15.0pt;text-align:left;
text-indent:-15.0pt;mso-list:l0 level1 lfo1;tab-stops:list 15.0pt;mso-layout-grid-align:
none;text-autospace:none'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-bidi-font-family:宋体;
font-weight:normal'><span style='mso-list:Ignore'>2．<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>ll_rw_block( )</span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>函数<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:20.4pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>ll_rw_block(
)</span><span style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:
normal'>函数产生<span class=GramE>块设备</span>请求；内核和设备驱动程序的很多地方都会调用这个函数。该函数接原型如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=GramE>void
<span style='mso-spacerun:yes'>&nbsp;</span>ll</span>_rw_block(int rw, int nr,
struct buffer_head * bhs[])<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:19.8pt'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>其参数的含义为：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:21.25pt;text-indent:-21.25pt;mso-list:
l2 level1 lfo3;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>操作类型<span
lang=EN-US>rw</span>，其值可以是<span lang=EN-US>READ</span>、<span lang=EN-US>WRITE</span>、<span
lang=EN-US>READA</span>或者<span lang=EN-US>WRITEA</span>。最后两种操作类型和前两种操作类型之间的区别在于，当没有可用的请求描述符时后两个函数不会阻塞。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:21.25pt;text-indent:-21.25pt;mso-list:
l2 level1 lfo3;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>要传送的块数<span
lang=EN-US>nr</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:21.25pt;text-indent:-21.25pt;mso-list:
l2 level1 lfo3;tab-stops:list 21.25pt'><![if !supportLists]><span lang=EN-US
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;mso-hansi-font-family:Wingdings;
mso-bidi-font-family:宋体;font-weight:normal'><span style='mso-list:Ignore'>・<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>一个<span
lang=EN-US>bhs</span>数组，有<span lang=EN-US>nr</span><span class=GramE>个</span>指针，指向说明块的缓冲区首部（这些块的大小必须相同，而且必须处于同一个块设备）。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>该函数的代码在<span
lang=EN-US>block/ll_rw_blk.c</span>中：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span><span class=GramE>void</span> ll_rw_block(int rw, int nr, struct
buffer_head * bhs[])<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'>{<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>unsigned</span> int major;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>int</span> correct_size;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>int</span> i;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> (!nr)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span><span class=GramE>major</span> =
MAJOR(bhs[0]-&gt;b_dev);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>/* <span
class=GramE>Determine</span> correct block size for this device. */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>correct_size = get_hardsect_<span class=GramE>size(</span>bhs[0]-&gt;b_dev);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* <span class=GramE>Verify</span> requested block sizes. */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>for</span> (i = 0; i &lt; nr; i++) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>struct</span> buffer_head *bh = bhs[i];<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=GramE>if</span> (bh-&gt;b_size % correct_size) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>printk(</span>KERN_NOTICE &quot;ll_rw_block: device
%s: &quot;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>&quot;<span class=GramE>only</span> %d-char blocks implemented
(%u)\n&quot;,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>kdevname(</span>bhs[0]-&gt;b_dev),<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>correct_size,
<span class=GramE>bh</span>-&gt;b_size);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>goto</span> sorry;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> ((rw &amp; WRITE) &amp;&amp;
is_read_only(bhs[0]-&gt;b_dev)) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>printk(</span>KERN_NOTICE &quot;Can't write to
read-only device %s\n&quot;,<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=GramE>kdevname(</span>bhs[0]-&gt;b_dev));<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>goto</span> sorry;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>for</span> (i = 0; i &lt; nr; i++) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>struct</span> buffer_head *bh = bhs[i];<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Only one thread can actually submit the I/O. */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> (test_and_set_bit(BH_Lock,
&amp;bh-&gt;b_state))<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>continue</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* <span class=GramE>We</span> have the buffer lock */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>atomic_<span class=GramE>inc(</span>&amp;bh-&gt;b_count);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>bh</span>-&gt;b_end_io = end_buffer_io_sync;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>switch(</span>rw) {<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=GramE>case</span> WRITE:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> (!atomic_set_buffer_clean(bh))<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Hmmph! Nothing to write */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>goto</span> end_io;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>__mark_buffer_<span class=GramE>clean(</span>bh);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=GramE>break</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>case</span> READA:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>case</span> READ:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>if</span> (buffer_uptodate(bh))<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Hmmph! Already have it */<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>goto</span> end_io;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>break</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>default</span>:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>BUG(</span>);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>end_io:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>bh</span>-&gt;b_end_io(bh, test_bit(BH_Uptodate,
&amp;bh-&gt;b_state));<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>continue</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>submit_<span class=GramE>bh(</span>rw, bh);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span>}<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return</span>;<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-US style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>sorry</span></span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>:<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* Make sure we don't get infinite dirty retries<span class=GramE>..</span>
*/<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>for</span> (i = 0; i &lt; nr; i++)<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>mark_buffer_<span class=GramE>clean(</span>bhs[i]);<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:
10.0pt;font-weight:normal'>}<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:19.8pt'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>下面对该函数给予解释：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:19.8pt'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>进入<span lang=EN-US>ll_rw_block()</span>以后，先对块大小作一些检查；如果是写访问，则还要检查目标设备是否可写。内核中有个二维数组<span
lang=EN-US>ro_bits</span>，定义于<span lang=EN-US>drivers/block/ll_rw_blk.c</span>中：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal style='text-indent:19.8pt'><span class=GramE><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>static</span></span><span
lang=EN-US style='font-size:10.5pt;mso-bidi-font-size:10.0pt;font-weight:normal'>
long ro_bits[MAX_BLKDEV][8];<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:19.8pt'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;font-weight:normal'>每个设备在这个数组中都有个标志，通过系统调用<span
lang=EN-US>ioctl()</span>可以将一个标志<span class=GramE>位设置</span>成<span lang=EN-US>1</span>或<span
lang=EN-US>0</span>，表示相应设备为只读或可写，而<span lang=EN-US>is_read_only</span>（）就是检查这个数组中的标志位是否为<span
lang=EN-US>1<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:20.4pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-size:10.5pt;
mso-bidi-font-size:10.0pt;mso-font-kerning:0pt;font-weight:normal'>接下来，就通过第二个<span
lang=EN-US>for</span>循环依次处理对各个缓冲区的读写请求了。对于要读写的每个块，首先将其缓冲区加上锁，还要将其<span
lang=EN-US>buffer_head</span>结构中的函数指针<span lang=EN-US>b_end_io</span>设置成指向<span
lang=EN-US>end_buffer_io_sync</span>，当完成对给定块的读写时，就调用该函数。此外，对于待写的缓冲区，其<span
lang=EN-US>BH_Dirty</span>标志位应该为<span lang=EN-US>1</span>，否在就不需要写了，而既然写了，就要把它清<span
lang=EN-US>0</span>，并通过<span lang=EN-US>__mark_buffer_clean(bh)</span>将缓冲区转移到干净页面的<span
lang=EN-US>LRU</span>队列中。反之，对于<span class=GramE>待读</span>的缓冲区，其<span
lang=EN-US>buffer_uptodate</span>（）标志位为<span lang=EN-US>0</span>，否在就不需要读了。每个具体的设备就好像是个服务器，所以最后具体的读写是通过<span
lang=EN-US>submit_bh</span>（）将读写请求提交各“服务器”完成的，每次读写一个块，该函数的代码也在同一文件中，读者可以自己去读。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
