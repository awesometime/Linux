<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="7.3.1.files/filelist.xml">
<link rel=Edit-Time-Data href="7.3.1.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>信号量</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="chsdate" downloadurl=""/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>CLJ</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>CLJ</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2007-08-15T08:41:00Z</o:Created>
  <o:LastSaved>2007-08-15T08:41:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1168</o:Words>
  <o:Characters>6662</o:Characters>
  <o:Lines>55</o:Lines>
  <o:Paragraphs>15</o:Paragraphs>
  <o:CharactersWithSpaces>7815</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 磅</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:宋体;
	mso-font-kerning:1.0pt;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
 /* Page Definitions */
 @page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:普通表格;
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><st1:chsdate Year="1899" Month="12" Day="30"
IsLunarDate="False" IsROCDate="False" w:st="on"><b style='mso-bidi-font-weight:
 normal'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
 color:black;mso-font-kerning:0pt'>7.3.1</span></b></st1:chsdate><b
style='mso-bidi-font-weight:normal'><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>信号量<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>信号量及信号量上的操作是<span
lang=EN-US>E.W.Dijkstra </span>在<span lang=EN-US>1965</span>年提出的一种解决同步、互斥问题的较通用的方法，并在很多操作系统中得以实现，<span
lang=EN-US> Linux</span>改进并实现了这种机制。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>信号量<span
lang=EN-US>(semaphore )</span>实际是一个整数，它的值由多个进程进行测试<span lang=EN-US>(test)</span>和设置<span
lang=EN-US>(set)</span>。就每个进程所关心的测试和设置操作而言，这两个操作是不可中断的，或称“原子”操作，即一旦开始直到两个操作全部完成。测试和设置操作的结果是：信号量的当前值和设置值相加，其<span
class=GramE>和或者是正或者</span>为负。根据测试和设置操作的结果，一个进程可能必须睡眠，直到有另一个进程改变信号量的值。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>信号量可用来实现所谓的“临界区”的互斥使用，临界区指同一时刻只能有一个进程执行其中代码的代码段。为了进一步理解信号量的使用，下面我们举例说明。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>假设你有很多相互协作的进程，它们正在读或写一个数据文件中的记录。你可能希望严格协调对这个文件的存取，于是你使用初始值为<span
lang=EN-US>1</span>的信号量，在这个信号量上实施两个操作，首先测试并且给信号量<span class=GramE>的值减</span><span
lang=EN-US>1</span>，然后测试并给信号量的值加<span lang=EN-US>1</span>。当第一个进程存取文件时，它把信号量<span
class=GramE>的值减</span><span lang=EN-US>1</span>，并获得成功，信号量的<span class=GramE>值现在</span>变为<span
lang=EN-US>0</span>，这个进程可以继续执行并存取数据文件。但是，如果另外一个进程也希望存取这个文件，那么它也把信号量<span
class=GramE>的值减</span><span lang=EN-US>1</span>，结果是不能存取这个文件，因为信号量的值变为<span
lang=EN-US>-1</span>。这个进程将被挂起，直到第一个进程完成对数据文件的存取。当第一个进程完成对数据文件的存取，它将增加信号量的值，使它重新变为<span
lang=EN-US>1</span>，现在，等待的进程被唤醒，它对信号量的减<span lang=EN-US>1</span>操作将获得成功。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>上述的进程互斥问题，是针对进程之间要共享一个临界资源而言的，信号量的初值为<span
lang=EN-US>1</span>。实际上，信号量作为资源计数器，它的初值可以是任何正整数，其初值不一定为<span lang=EN-US>0</span>或<span
lang=EN-US>1</span>。另外，如果一个进程要先获得两个或多个的共享资源后才能执行的话，那么，相应地也需要多个信号量，而多个进程要分别获得多个临界资源后方能运行，这就是信号量集合机制，<span
lang=EN-US>Linux </span>讨论的就是信号量集合问题。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>1. </span></b><b style='mso-bidi-font-weight:
normal'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>信号量的数据结构<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>Linux</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>中信号量是通过内核提供的一系列数据结构实现的，这些数据结构存在于内核空间，对它们的分析是充分理解信号量及利用信号量实现进程间通信的基础，下面先给出信号量的数据结构<span
lang=EN-US>(</span>存在于<span lang=EN-US>include/linux/sem.h</span>中<span
lang=EN-US>)</span>，其它一些数据结构将在相关的系统调用中介绍。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>(1)</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>系统中每个信号量的数据结构<span lang=EN-US>(sem)<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>struct</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> sem { <o:p></o:p></span></p>

<p class=MsoNormal align=left style='margin-left:72.0pt;text-align:left;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>int<span
style='mso-spacerun:yes'>&nbsp; </span>semval;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>信号量的当前值<span lang=EN-US><span
style='mso-spacerun:yes'>&nbsp; </span>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>int<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>sempid;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/*</span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>在信号量上最后一次操作的进程识别号<span lang=EN-US> *<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>(2)</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>系统中表示信号量集合<span lang=EN-US>(set)</span>的数据结构<span
lang=EN-US>(semid_ds)<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>struct</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> semid_ds {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-tab-count:1'> </span>struct ipc_perm sem_perm;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/*<span style='mso-spacerun:yes'>&nbsp; </span>IPC</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>权限<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;</span><span
style='mso-tab-count:1'>&nbsp; </span>long<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>sem_otime; <span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>最后一次对信号量操作<span lang=EN-US>(semop)</span>的时间<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>long<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>sem_ctime;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>对这个结构最后一次修改的时间<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-tab-count:1'> </span>struct sem<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>*sem_base;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在信号量数组中指向第一个信号量的指针<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-tab-count:1'>&nbsp;&nbsp; </span>struct
sem_queue *sem_pending;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>待处理的挂起操作<span lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-tab-count:1'> </span>struct sem_queue **sem_pending_last; /* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>最后一个挂起操作<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-tab-count:1'> </span>struct sem_undo *undo;<span style='mso-tab-count:
1'> </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>在这个数组上的<span lang=EN-US>undo </span>请求<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span>ushort<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>sem_nsems;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>在信号量数组上的信号量号<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-tab-count:1'>&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>(3) </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>系统中每一信号量集合的队列结构<span lang=EN-US>(sem_queue)<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>struct</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> sem_queue {<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sem_queue *<span style='mso-tab-count:1'> </span>next;<span
style='mso-tab-count:1'>&nbsp;&nbsp; </span>/* </span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>队列中下一个节点<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sem_queue **<span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>prev;<span
style='mso-tab-count:1'>&nbsp;&nbsp; </span> /* </span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>队列中前一个节点<span
lang=EN-US>, *(q-&gt;prev) == q */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct wait_queue *<span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>sleeper;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>正在睡眠的进程<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sem_undo *<span style='mso-tab-count:1'>&nbsp; </span>undo;<span
style='mso-tab-count:1'>&nbsp;&nbsp; </span> /* undo </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>结构<span lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>int<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pid;<span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span> /* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>请求进程的进程识别号<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>int<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>status;<span
style='mso-tab-count:1'> </span> /* </span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>操作的完成状态<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct semid_ds *<span style='mso-tab-count:1'>&nbsp; </span>sma;<span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span> /*</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>有操作的信号量集合数组<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sembuf *<span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span>sops;<span
style='mso-tab-count:1'>&nbsp;&nbsp; </span> /* </span><span style='font-family:
宋体;mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>挂起操作的数组<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>int<span style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp; </span>nsops;<span
style='mso-tab-count:1'>&nbsp; </span> /* </span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>操作的个数<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>(4)</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>几个主要数据结构之间的关系<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>从<span
lang=EN-US>7.3</span>图可以看出，<span lang=EN-US>semid_ds</span>结构的<span lang=EN-US>sem_base</span>指向一个信号量数组，允许操作这些信号量集合的进程可以利用系统调用执行操作
。注意，<span class=GramE><b style='mso-bidi-font-weight:normal'>信号量信号量</b></span><b
style='mso-bidi-font-weight:normal'>集合的区别，</b>从上面可以看出，信号量用“<span lang=EN-US>sem</span></span><span
lang=EN-US style='mso-ascii-font-family:宋体;color:black;mso-font-kerning:0pt'>”</span><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'> </span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>结构描述，而信号量集合用“<span
lang=EN-US>semid_ds&quot;</span>结构描述，实际上，在后面的讨论中，我们以信号量集合为讨论的主要对象。下面我们给出这几个结构之间的关系，如图<span
lang=EN-US>7.3</span>所示。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><!--[if gte vml 1]><o:wrapblock><v:shapetype
  id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
  path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
  <v:stroke joinstyle="miter"/>
  <v:formulas>
   <v:f eqn="if lineDrawn pixelLineWidth 0"/>
   <v:f eqn="sum @0 1 0"/>
   <v:f eqn="sum 0 0 @1"/>
   <v:f eqn="prod @2 1 2"/>
   <v:f eqn="prod @3 21600 pixelWidth"/>
   <v:f eqn="prod @3 21600 pixelHeight"/>
   <v:f eqn="sum @0 0 1"/>
   <v:f eqn="prod @6 1 2"/>
   <v:f eqn="prod @7 21600 pixelWidth"/>
   <v:f eqn="sum @8 21600 0"/>
   <v:f eqn="prod @7 21600 pixelHeight"/>
   <v:f eqn="sum @10 21600 0"/>
  </v:formulas>
  <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
  <o:lock v:ext="edit" aspectratio="t"/>
 </v:shapetype><v:shape id="_x0000_s1026" type="#_x0000_t75" style='position:absolute;
  left:0;text-align:left;margin-left:15.75pt;margin-top:-23.4pt;width:363.05pt;
  height:304.25pt;z-index:1' o:allowincell="f">
  <v:imagedata src="7.3.1.files/image001.png" o:title="图7"/>
  <w:wrap type="topAndBottom"/>
 </v:shape><![endif]--><![if !vml]><span style='mso-ignore:vglayout'>
 <table cellpadding=0 cellspacing=0>
  <tr>
   <td width=21 height=0></td>
  </tr>
  <tr>
   <td></td>
   <td><img width=484 height=406 src="7.3.1.files/image002.gif" v:shapes="_x0000_s1026"></td>
  </tr>
 </table>
 </span><![endif]><!--[if gte vml 1]></o:wrapblock><![endif]--><br
style='mso-ignore:vglayout' clear=ALL>
<span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>图<span lang=EN-US>7.3<span
style='mso-spacerun:yes'>&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;</span>System V IPC</span>信号量数据结构之间的关系<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>Linux</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>对信号量的这种实现机制，是为了与消息和共享内存的实现机制保持一致，但信号量是这三者中最难理解的，因此我们将结合系统调用做进一步的介绍，通过对系统调用的深入分析，我们可以较清楚地了解内核对信号量的实现机制。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>2. </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>系统调用：<span class=GramE><span lang=EN-US>semget()</span></span><span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>为了创建一个新的信号量集合，或者存取一个已存在的集合，要使用<span
lang=EN-US>segget()</span>系统调用，其描述如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>原型<span lang=EN-US>: <span class=GramE>int</span> semget
( key_t key, int nsems, int semflg );<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>返回值<span lang=EN-US>: </span>如果成功，则返回信号量集合的<span
lang=EN-US>IPC</span>识别号<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>如果为<span lang=EN-US>-1</span>，则出现错误：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>semget()</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>中的第一个参数是键值，<span
lang=EN-US><span style='mso-spacerun:yes'>&nbsp; </span></span>这个键值要与已有的键值进行比较，已有的键值指在内核中已存在的其它信号量集合的键值。对信号量集合的打开或存取操作依赖于<span
lang=EN-US>semflg</span>参数的取值：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>IPC_CREAT </span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>：如果内核中没有新创建的信号量集合，则创建它。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>IPC_EXCL </span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>：当与<span lang=EN-US>IPC_CREAT</span>一起使用时，但信号量集合已经存在，则创建失败。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>如果<span
lang=EN-US>IPC_CREAT</span>单独使用，<span lang=EN-US>semget()</span>为一个新创建的集合返回标识号，或者返回具有相同键值的已存在集合的标识号。如果<span
lang=EN-US>IPC_EXCL</span>与<span lang=EN-US>IPC_CREAT</span>一起使用，要么创建一个新的集合，要么对已存在的集合返回<span
lang=EN-US>-1</span>。<span lang=EN-US>IPC_EXCL</span>单独是没有用的，当与<span
lang=EN-US>IPC_CREAT</span>结合起来使用时，可以保证新创建集合的打开和存取。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>作为<span
lang=EN-US>System V IPC</span>的其它形式，一种可选项是把一个八进制与掩码或，形成信号量集合的存取权限。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>第三个参数<span
lang=EN-US>nsems</span>指的是在新创建的集合中信号量的个数。其最大值在“<span lang=EN-US>linux/sem.h</span></span><span
lang=EN-US style='mso-ascii-font-family:宋体;color:black;mso-font-kerning:0pt'>”</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>中定义：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;</span><span
style='mso-spacerun:yes'>&nbsp;</span>#define <span class=GramE>SEMMSL<span
style='mso-spacerun:yes'>&nbsp; </span>250</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* &lt;= 8 000 max num of semaphores per id */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>注意：如果你是显式地打开一个现有的集合，则<span
lang=EN-US>nsems</span>参数可以忽略。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>下面举例说明。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>int</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> open_semaphore_set( key_t keyval, int numsems )<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>{<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>int</span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>sid;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if</span> ( ! numsems )<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return(</span>-1);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if(</span>(sid = semget( keyval, numsems, IPC_CREAT | 0660 )) ==
-1)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>{<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>return(</span>-1);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return(</span>sid);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>注意，这个例子显式地用了<span
lang=EN-US>0660</span>权限。这个函数要么返回一个集合的标识号，要么返回<span lang=EN-US>-1</span>而出错。键<span
class=GramE>值必须</span>传递给它，信号量的个数也传递给它，这是因为如果创建成功则要分配空间。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>3.<span
style='mso-spacerun:yes'>&nbsp; </span></span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>系统调用<span
lang=EN-US>: <span class=GramE>semop()</span><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>原型<span lang=EN-US>: <span class=GramE>int</span> semop (
int semid, struct sembuf *sops, unsigned nsops);<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>返回<span lang=EN-US>: </span>如果所有的操作都执行，则成功返回<span
lang=EN-US>0</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>如果为<span lang=EN-US>-1</span>，则出错。<span
lang=EN-US><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>semop()</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>中的第一个参数<span lang=EN-US>(semid)</span>是集合的识别号<span
lang=EN-US>(</span>可以由<span lang=EN-US>semget()</span>系统调用得到<span lang=EN-US>)</span>。第二个参数<span
lang=EN-US>(sops)</span>是一个指针，它指向在集合上执行操作的数组。而第三个参数<span lang=EN-US>(nsop)</span>是在那个数组上操作的个数。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>sops</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>参数指向类型为<span lang=EN-US>sembuf</span>的一个数组，这个结构在<span
lang=EN-US>/inclide/linux/sem.h </span>中声明，是内核中的一个数据结构，描述如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>struct</span> sembuf {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>ushort<span style='mso-spacerun:yes'>&nbsp; </span>sem_num;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在数组中信号量的索引值<span lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>short<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>sem_op;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>信号量操作值<span lang=EN-US>(</span>正数、负数或<span
lang=EN-US>0) */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>short<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>sem_flg;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* </span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>操作标志，为<span lang=EN-US>IPC_NOWAIT</span>或<span
lang=EN-US>SEM_UNDO*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>如果<span
lang=EN-US>sem_op</span>为负数，那么就从信号量的值中减去<span lang=EN-US>sem_op</span>的绝对值，这意味着进程要获取资源，这些资源是由信号量控制或监控来存取的。如果没有指定<span
lang=EN-US>IPC_NOWAIT</span>，那么调用进程睡眠到请求的资源<span class=GramE>数得到</span>满足<span
lang=EN-US>(</span>其它的进程可能释放一些资源<span lang=EN-US>)</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>如果<span
lang=EN-US>sem_op</span>是正数，把它的值加到信号量，这意味着把资源归还给应用程序的集合。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>最后，如果<span
lang=EN-US>sem_op</span>为<span lang=EN-US>0</span>，那么调用进程将睡眠到信号量的值也为<span
lang=EN-US>0</span>，这相当于一个信号量到达了<span lang=EN-US>100%</span>的利用。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>综上所述，<span
lang=EN-US>Linux </span>按如下的规则判断是否所有的操作都可以成功：操作值和信号量的当前值相加大于<span lang=EN-US> 0</span>，或操作值和当前值均为<span
lang=EN-US> 0</span>，则操作成功。如果系统调用中指定的所有操作中有一个操作不能成功时，则<span lang=EN-US> Linux </span>会挂起这一进程。但是，如果操作标志指定这种情况下不能挂起进程的话，系统调用返回并指明信号量上的操作没有成功，<span
class=GramE>而进程</span>可以继续执行。如果进程被挂起，<span lang=EN-US>Linux </span>必须保存信号量的操作状态并将当前进程放入等待队列。为此，<span
lang=EN-US>Linux </span>内核在堆栈中建立一个<span lang=EN-US> sem_queue </span>结构并填充该结构。新的<span
lang=EN-US> sem_queue </span>结构添加到集合的等待队列中（利用<span lang=EN-US> sem_pending </span>和<span
lang=EN-US> sem_pending_last </span>指针）。当前进程放入<span lang=EN-US> sem_queue </span>结构的等待队列中（<span
lang=EN-US>sleeper</span>）后调用调度程序选择其他的进程运行。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>为了进一步解释<span
lang=EN-US>semop()</span>调用，让我们来看一个例子。假设我们有一台打印机，一次只能打印一个作业。我们创建一个只有一个信号量的集合<span
lang=EN-US>(</span>仅一个打印机<span lang=EN-US>)</span>，并且给信号量的初值为<span lang=EN-US>1(</span>因为一次只能有一个作业<span
lang=EN-US>)</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>每当我们希望把一个作业发送给打印机时，首先要确定这个资源是可用的，可以通过从信号量中获得一个单位而达到此目的。让我们装载一个<span
lang=EN-US>sembuf</span>数组来执行这个操作：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>struct</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> sembuf sem_lock = { 0, -1, IPC_NOWAIT };<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>从这个初始化结构可以看出，<span
lang=EN-US>0</span>表示集合中信号量数组的索引，即在集合中只有一个信号量，<span lang=EN-US>-1</span>表示信号量操作<span
lang=EN-US>(sem_op)</span>，操作标志为<span lang=EN-US>IPC_NOWAIT</span>，表示或者调用进程不用等待可立即执行，或者失败<span
lang=EN-US>(</span>另一个进程正在打印<span lang=EN-US>)</span>。下面是用初始化的<span lang=EN-US>sembuf</span>结构进行<span
lang=EN-US>semop()</span>系统调用的例子：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>if(</span>(semop(sid, &amp;sem_lock, 1) == -1)<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>fprintf(</span>stderr,&quot;semop\n&quot;);<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>第三个参数<span
lang=EN-US>(nsops)</span>是说我们仅仅执行了一个操作<span lang=EN-US>(</span>在我们的操作数组中只有一个<span
lang=EN-US>sembuf</span>结构<span lang=EN-US>)</span>，<span lang=EN-US>sid</span>参数是我们集合的<span
lang=EN-US>IPC</span>识别号。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>当我们使用完打印机，我们必须把资源返回给集合，以便其它的进程使用。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>struct</span> sembuf sem_unlock = { 0, 1, IPC_NOWAIT };<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>上面这个初始化结构表示，把<span
lang=EN-US>1</span>加到集合数组的第<span lang=EN-US>0</span>个元素，换句话说，一个单位资源返回给集合。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>4. </span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>系统调用<span lang=EN-US> : <span
class=GramE>semctl()</span><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>原型<span lang=EN-US>: <span class=GramE>int</span> semctl
( int semid, int semnum, int cmd, union semun arg );<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>返回值<span lang=EN-US>: </span>成功返回正数，出错返回<span lang=EN-US>-1</span>。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp; </span></span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>注意：<span lang=EN-US>semctl()</span>是在集合上执行控制操作。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>semctl()</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>的第一个参数<span lang=EN-US>(semid)</span>是集合的标识号，第二个参数<span
lang=EN-US>(semnn)</span>是将要操作的信号量个数，从本质上说，它是集合的一个索引，对于集合上的第一个信号量，则该值为<span
lang=EN-US>0</span>。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>・<span
lang=EN-US>cmd</span>参数表示在集合上执行的命令，这些命令及解释如表<span lang=EN-US>7.2</span>所示：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>・<span
lang=EN-US>arg</span>参数的类型为<span lang=EN-US>semun</span>，这个特殊的联合体在<span
lang=EN-US> include/linux/sem.h</span>中声明，对它的描述如下：<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/*
arg for semctl system calls. */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>union</span> semun {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;
</span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class=GramE>int</span> val;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* value for SETVAL */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>struct</span> semid_ds *buf;<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span>/* buffer for IPC_STAT &amp;
IPC_SET */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>ushort</span> *array;<span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* array for GETALL &amp; SETALL */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>struct</span> seminfo *__buf;<span
style='mso-spacerun:yes'>&nbsp; </span>/* buffer for IPC_INFO */<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=GramE>void</span> *__pad;<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><span lang=EN-US style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>表<span
lang=EN-US>7.2<span style='mso-tab-count:4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp; </span>cmd</span>命令及解释<span lang=EN-US><o:p></o:p></span></span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;border-collapse:collapse;border:none;mso-border-top-alt:
 solid black 1.0pt;mso-border-left-alt:solid black 1.0pt;mso-border-right-alt:
 solid black 1.0pt;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  mso-border-top-alt:1.0pt;mso-border-left-alt:1.0pt;mso-border-bottom-alt:
  .5pt;mso-border-right-alt:.5pt;mso-border-color-alt:black;mso-border-style-alt:
  solid;padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>命令<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border:solid black 1.0pt;
  border-left:none;mso-border-top-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=center style='text-align:center;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>解<span lang=EN-US><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span></span>释<span
  lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>IPC_STAT<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>从信号量集合上检索<span lang=EN-US>semid_ds</span>结构，并存到<span lang=EN-US>semun</span>联合体参数的成员<span
  lang=EN-US>buf</span>的地址中<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>IPC_SET<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>设置一个信号量集合的<span lang=EN-US>semid_ds</span>结构中<span lang=EN-US>ipc_perm</span>域的值，并从<span
  lang=EN-US>semun</span>的<span lang=EN-US>buf</span>中<span class=GramE>取出值</span><span
  lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>IPC_RMID<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>从内核中删除信号量集合<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:38.8pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:38.8pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>GETALL<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:38.8pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>从信号量集合中获得所有信号量的值，并把其整数值存到<span lang=EN-US>semun</span>联合体成员的一个指针数组中<span
  lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:24.9pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:24.9pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>GETNCNT<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:24.9pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>返回当前等待资源的进程个数<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>GETPID<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>返回最后一个执行系统调用<span lang=EN-US>semop()</span>进程的<span lang=EN-US>PID<o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>GETVAL<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>返回信号量集合内单个信号量的值<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>GETZCNT<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>返回当前等待<span lang=EN-US>100%</span>资源利用的进程个数<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>SETALL<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>与<span lang=EN-US>GETALL</span>正好相反<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-lastrow:yes;page-break-inside:avoid;height:22.65pt'>
  <td width=119 valign=top style='width:71.4pt;border:solid black 1.0pt;
  border-top:none;mso-border-left-alt:solid black 1.0pt;mso-border-bottom-alt:
  solid black .5pt;mso-border-right-alt:solid black .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
  mso-font-kerning:0pt'>SETVAL<o:p></o:p></span></p>
  </td>
  <td width=670 valign=top style='width:402.25pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  mso-border-bottom-alt:solid black .5pt;mso-border-right-alt:solid black .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:22.65pt'>
  <p class=MsoNormal align=left style='text-align:left;text-autospace:none'><span
  style='font-family:宋体;mso-hansi-font-family:"Times New Roman";mso-font-kerning:
  0pt'>用联合体中<span lang=EN-US>val</span>成员的值设置信号量集合中单个信号量的值<span lang=EN-US><o:p></o:p></span></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>这个联合体中，有三个成员已经在表<span
lang=EN-US>7</span>－<span lang=EN-US>1</span>中提到，剩下的两个成员<span lang=EN-US>_buf </span>和<span
lang=EN-US>_pad</span>用在内核中信号量的实现代码，开发者很少用到。事实上，这两个成员是<span lang=EN-US>Linux</span>操作系统所特有的，在<span
lang=EN-US>UINX</span>中没有。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>这个系统调用比较复杂，我们举例说明。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>下面这个程序段返回集合上索引为<span
lang=EN-US>semnum</span>对应信号量的值。当用<span lang=EN-US>GETVAL</span>命令时，最后的参数<span
lang=EN-US>(semnum)</span>被忽略。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>int</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> get_sem_val( int sid, int semnum )<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>{<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>return(</span> semctl(sid, semnum, GETVAL, 0));<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>}<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>关于信号量的三个系统调用，我们进行了详细的介绍。从中可以看出，这几个系统调用的实现和使用都和系统内核密切相关，因此，如果在了解内核的基础上，<span
class=GramE>再理解</span>系统调用，相对要简单地多，也深入地多。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>5. </span></b><b style='mso-bidi-font-weight:
normal'><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>死锁<span lang=EN-US><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>和信号量操作相关的概念还有“死锁”。当某个进程修改了信号量而进入临界区之后，却因为崩溃或被“杀死<span
lang=EN-US>(kill)&quot;</span>而没有退出临界区，这时，其他被挂起在信号量上的进程永远得不到运行机会，这就是所谓的死锁。<span
lang=EN-US>Linux </span>通过维护一个信号量数组的调整列表<span lang=EN-US>(semadj)</span>来避免这一问题。其基本思想是，<span
class=GramE>当应用</span>这些“调整”时，让信号量的状态退回到操作实施前的状态。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>关于调整的描述是在<span
lang=EN-US>sem_undo</span>数据结构中，在<span lang=EN-US>include/linux/sem.h</span>描述如下：<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>/*</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>每一个任务都有一系列的恢复<span
lang=EN-US>(undo)</span>请求，当进程退出时，自动执行<span lang=EN-US>undo</span>请求<span
lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span class=GramE><span
lang=EN-US style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>struct</span></span><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'> sem_undo {<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sem_undo *<span style='mso-spacerun:yes'>&nbsp;
</span>proc_next;<span style='mso-spacerun:yes'>&nbsp; </span>/*</span><span
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>在这个进程上的下一个<span lang=EN-US>sem_undo</span>节点<span
lang=EN-US> */<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>struct sem_undo *<span style='mso-spacerun:yes'>&nbsp; </span>id_next;<span
style='mso-tab-count:1'>&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp; </span>/* </span><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>在这个信号量集和上的下一个<span
lang=EN-US>sem_undo</span>节点<span lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>int<span style='mso-tab-count:1'> </span> semid;<span style='mso-tab-count:
1'> </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>信号量集的标识号<span lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;
</span>short *<span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp; </span><span
style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>semadj;<span
style='mso-tab-count:1'>&nbsp; </span><span style='mso-spacerun:yes'>&nbsp;
</span>/* </span><span style='font-family:宋体;mso-hansi-font-family:"Times New Roman";
color:black;mso-font-kerning:0pt'>信号量数组的调整，每个进程一个<span lang=EN-US>*/<o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>};<o:p></o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'>sem_undo</span><span style='font-family:宋体;mso-hansi-font-family:
"Times New Roman";color:black;mso-font-kerning:0pt'>结构也出现在<span lang=EN-US>task_struct</span>数据结构中。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span lang=EN-US
style='font-family:宋体;mso-hansi-font-family:"Times New Roman";color:black;
mso-font-kerning:0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>每一个单独的信号量操作也许要请求得到一次“调整”，<span
lang=EN-US>Linux</span>将为每一个信号量数组的每一个进程维护至少一个<span lang=EN-US>sem_undo</span>结构。如果请求的进程没有这个结构，<span
class=GramE>当必要</span>时则创建它，新创建的<span lang=EN-US>sem_undo</span>数据结构既在这个进程的<span
lang=EN-US>task_struct</span>数据结构中排队，也在信号量数组的<span lang=EN-US>semid_ds</span>结构中排队。当对信号量数组上的一个信号量施加操作时，这个操作值的负数与这个信号量的“调整”相加，因此，如果操作值为<span
lang=EN-US>2</span>，则把<span lang=EN-US>-2</span>加到这个信号量的“调整”域。<span lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:24.0pt;
mso-layout-grid-align:none;text-autospace:none'><span style='font-family:宋体;
mso-hansi-font-family:"Times New Roman";color:black;mso-font-kerning:0pt'>当进程被删除时，<span
lang=EN-US>Linux</span>完成了对<span lang=EN-US>sem_undo</span>数据结构的设置及对信号量数组的调整。如果一个信号量集合被删除，<span
lang=EN-US>sem_undo</span>结构依然留在这个进程的<span lang=EN-US>task_struct</span>结构中，但信号量集合的识别号变为无效。<span
lang=EN-US><o:p></o:p></span></span></p>

<p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
